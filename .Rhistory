devtools:::document()
devtools:::document()
devtools:::document()
file.edit('~/.Renviron')
library(paperTools)
devtools::load_all()
#'
#' Copy the diary template and execute the marked section.
#'
#' @importFrom tibble tibble
#' @importFrom stringr str_extract str_replace
#'
#' @param filename_
#' @param template_
#'
#' @export
diary_template = function(filename_ = paste0(format(Sys.Date(), "%Y%m%d"), '.Rmd'), template_ = '~/template.Rmd') {
df_convert_ = tibble(
raw = readLines(template_),
source = str_extract(raw, "&.*?&"),
toEval = str_extract(raw, "(?<=&).*?(?=&)"),
UMI = ifelse(is.na(source), NA, evalParse(toEval)),
lines = ifelse(is.na(source), NA, 1:length(source))
)
file_new_ = c()
for (i_ in seq_along(df_convert_$raw)) {
file_new_[[i_]] = df_convert_$raw[[i_]]
if (i_ %in% df_convert_$lines) {
file_new_[[i_]] = str_replace(file_new_[[i_]], "&.*?&", df_convert_$UMI[[i_]])
}
}
writeLines(file_new_, filename_)
}
diary_template()
debugSource("F:/0Local/project/paperTools/R/main.R", echo=TRUE)
diary_template()
devtools:::document()
normalizePath('paste0(format(Sys.Date(), "%Y%m%d"), '.Rmd')')
file.exists(paste0(format(Sys.Date(), "%Y%m%d"), '.Rmd'))
message('You haven\'t started writing your diary today')
paste0(format(Sys.Date(), "%Y%m"), '.Rmd')
format(Sys.Date(), "%Y%m")
paste0(format(Sys.Date(), "%Y%m"), '00.Rmd')
devtools:::document()
newMonth
newMonth()
format(Sys.Date(), "%Y%m")
evalPlaceholder('~/month.Rmd')
debugSource("F:/0Local/project/paperTools/R/main.R", echo=TRUE)
evalPlaceholder('~/month.Rmd')
devtools::load_all()
evalPlaceholder('~/month.Rmd')
View(df_convert_)
View(df_convert_)
format(Sys.Date(), "%Y%m")
evalParse(df_convert_$toEval)
#' evalParse
#'
#' Run a string of characters
#'
#' @export
evalParse = function(texts_) {unlist(lapply(texts_, \(text__) eval(parse(text = text__))))}
evalParse(df_convert_$toEval)
devtools::load_all()
newDiary()
file_new_
